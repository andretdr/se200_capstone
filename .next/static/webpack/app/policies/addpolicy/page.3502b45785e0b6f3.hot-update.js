"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/policies/addpolicy/page",{

/***/ "(app-pages-browser)/./app/policies/addpolicy/get-policy-type.tsx":
/*!****************************************************!*\
  !*** ./app/policies/addpolicy/get-policy-type.tsx ***!
  \****************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ GetPolicyType; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var _db__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/db */ \"(app-pages-browser)/./db/index.ts\");\n\n\nasync function GetPolicyType() {\n    const policyTypes = await _db__WEBPACK_IMPORTED_MODULE_1__.db.policy_types.findMany();\n    const formatTypes = policyTypes.map((items)=>{\n        return \"{label: \" + items.policy_type + \", value: \" + items.policy_type + \"}\";\n    });\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n        className: \"text-xl\",\n        children: \"Hi there!\"\n    }, void 0, false, {\n        fileName: \"E:\\\\myPrograms\\\\course_heicoders\\\\se200\\\\se200_capstoneProject\\\\app\\\\policies\\\\addpolicy\\\\get-policy-type.tsx\",\n        lineNumber: 13,\n        columnNumber: 9\n    }, this);\n} // export default async function GetPolicyType() {\n //     return (<>\n //             2. server hi\n //             </>\n //     )\n // }\n_c = GetPolicyType;\nvar _c;\n$RefreshReg$(_c, \"GetPolicyType\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9wb2xpY2llcy9hZGRwb2xpY3kvZ2V0LXBvbGljeS10eXBlLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQTBCO0FBRVgsZUFBZUM7SUFDMUIsTUFBTUMsY0FBYyxNQUFNRixtQ0FBRUEsQ0FBQ0csWUFBWSxDQUFDQyxRQUFRO0lBRWxELE1BQU1DLGNBQWNILFlBQVlJLEdBQUcsQ0FBQyxDQUFDQztRQUNqQyxPQUNJLGFBQWFBLE1BQU1DLFdBQVcsR0FBRyxjQUFjRCxNQUFNQyxXQUFXLEdBQUc7SUFFM0U7SUFFQSxxQkFDSSw4REFBQ0M7UUFBR0MsV0FBVTtrQkFBVTs7Ozs7O0FBSTlCLEVBRUYsa0RBQWtEO0NBQ2xELGlCQUFpQjtDQUNqQiwyQkFBMkI7Q0FDM0Isa0JBQWtCO0NBQ2xCLFFBQVE7Q0FDUixJQUFJO0tBckIwQlQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vYXBwL3BvbGljaWVzL2FkZHBvbGljeS9nZXQtcG9saWN5LXR5cGUudHN4P2FjYTYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZGIgfSBmcm9tIFwiQC9kYlwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gR2V0UG9saWN5VHlwZSgpIHtcclxuICAgIGNvbnN0IHBvbGljeVR5cGVzID0gYXdhaXQgZGIucG9saWN5X3R5cGVzLmZpbmRNYW55KCk7XHJcblxyXG4gICAgY29uc3QgZm9ybWF0VHlwZXMgPSBwb2xpY3lUeXBlcy5tYXAoKGl0ZW1zKT0+e1xyXG4gICAgICAgIHJldHVybihcclxuICAgICAgICAgICAgJ3tsYWJlbDogJyArIGl0ZW1zLnBvbGljeV90eXBlICsgJywgdmFsdWU6ICcgKyBpdGVtcy5wb2xpY3lfdHlwZSArICd9J1xyXG4gICAgICAgIClcclxuICAgIH0pXHJcblxyXG4gICAgcmV0dXJuIChcclxuICAgICAgICA8aDEgY2xhc3NOYW1lPVwidGV4dC14bFwiPlxyXG4gICAgICAgICAgICBIaSB0aGVyZSFcclxuICAgICAgICA8L2gxPlxyXG4gICAgKTtcclxuICB9XHJcblxyXG4vLyBleHBvcnQgZGVmYXVsdCBhc3luYyBmdW5jdGlvbiBHZXRQb2xpY3lUeXBlKCkge1xyXG4vLyAgICAgcmV0dXJuICg8PlxyXG4vLyAgICAgICAgICAgICAyLiBzZXJ2ZXIgaGlcclxuLy8gICAgICAgICAgICAgPC8+XHJcbi8vICAgICApXHJcbi8vIH0iXSwibmFtZXMiOlsiZGIiLCJHZXRQb2xpY3lUeXBlIiwicG9saWN5VHlwZXMiLCJwb2xpY3lfdHlwZXMiLCJmaW5kTWFueSIsImZvcm1hdFR5cGVzIiwibWFwIiwiaXRlbXMiLCJwb2xpY3lfdHlwZSIsImgxIiwiY2xhc3NOYW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/policies/addpolicy/get-policy-type.tsx\n"));

/***/ })

});